@startuml


class ConnectFour{
  - Board board;
  - Turn turn;
  + ConnectFour();
  + void GameStart();
  - void PlayGame();
  + bool GameHasFinished();
  - void PrintGameTable();
}
class Turn{
  - Player players[MAXIMUM_PLAYERS_NUMBER];
  - int currentPlayer;
  + Turn(Board)
  + void ChangeTurn();
  + void WriteActivePlayer();
  + void Play();
}
class Player{
  - Token token;
  - int tokensLeftCount;
  - Board board;
  + Player(Token, Board);
  - PutToken(int columnNumber);
  + Play();
  + WritePlayer();
}
class Board{
  - Token[][] tokens;
  + Board();
  - void InitializeBoardTokens();
  + bool PutToken(Token, int columnNumber);
  - bool CanInsertIntoColumn(int columnNumber);
  - int GetFirstEmptyRowInColumn(int columnNumber);
  - bool IsHorizontalConnectedFour();
  - bool CheckRowHasConnectedFour(int row, int column);
  - bool IsVerticalConnectedFour();
  - bool CheckColumnHasConnectedFour(int row, int column);
  - bool IsDiagonalConnectedFour();
  - bool CheckDiagonalHasConnectedFour(int row, int column);
  - bool IsInvertedDiagonalConnectedFour();
  - bool CheckInvertedDiagonalHasConnectedFour(int row, int column);
  + bool IsConnectedFour();
  + bool IsBoardComplete();
  + void PrintBoard();
}
class BoardConstant{
  ~ const int BOARD_COLUMNS;
  ~ const int BOARD_ROWS;
  ~ const int WIN_NUMBER;
  ~ const int MAX_COLUMN_TO_CHECK;
  ~ const int MAX_ROW_TO_CHECK;
}
class PlayerConstant{
  ~ const int MAXIMUM_TOKEN_NUMBER;
  ~ const int MAXIMUM_PLAYERS_NUMBER;
}
enum Token{
  + RED;
  + YELLOW;
}
static class TokenMethod{
  ~ static Token GetTokenFromNumber(int number);
}
static class MessageConstant{
  ~const string GAME_START;
  ~ const string WINNER_TITLE;
  ~ const string GAME_TIE;
  ~ const string PLAYER_DESCRIPTION;
  ~ const string PLAYER_NO_MORE_TOKENS;
  ~ const string COLUMN_X_CAN_NOT_BE_USED;
  ~ const string INSERT_COLUMN_NUMBER;
  ~ const string INSERT_VALID_COLUMN_NUMBER;
  ~ const string PLAYER_INFO;
}
static class Message{
  - static void WriteLine(string str);
  + static void WriteGameStarted();
  + static void WriteWinnerTitle();
  + static void WriteGameTie();
  + static void WritePlayerDescription(Player player, int order);
  + static void WritePlayerNoTokenLeft(Token token);
  + static void WriteColumnCanNotBeUsed(int column);
  + static void WriteInsertColumnNumber();
  + static void WriteInsertValidColumnNumber();
  + static void WritePlayer(Player player);
  - static void WriteStringWithParams(string str, params object[] parameters);
}
ConnectFour  *-down-> Board 
ConnectFour *-down-> Turn
Turn -down-> "2" Player
Turn .down.> Token
Player  *-down-> "21" Token
Player --> Board
Board ..>Token
Board ..>BoardConstant
Player ..> PlayerConstant
Turn ..> PlayerConstant
Turn ..> TokenMethod
Message ..> MessageConstant
ConnectFour ..> Message
Board ..> Message
Turn ..> Message
Player ..> Message
@enduml